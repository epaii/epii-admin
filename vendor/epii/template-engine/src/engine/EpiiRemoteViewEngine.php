<?php


namespace epii\template\engine;


class EpiiRemoteViewEngine extends EpiiViewEngine
{
    public function init(Array $config)
    {
        $config = array_merge(["template_cache_enable" => false,
            "template_cache_time" => 0,
            "template_cache_dir" => ""], $config);
        parent::init($config);
        if ($this->config["template_cache_enable"]) {
            if (!is_dir($this->config["template_cache_dir"])) {
                mkdir($this->config["template_cache_dir"], 0777, true);
            }
        }

    }

    public static function require_config_keys()
    {
        $configs = parent::require_config_keys(); // TODO: Change the autogenerated stub
        $configs[] = "secret";

        return $configs;
    }


    public function file_get_contents($file)
    {
        $content = file_get_contents($file);
        if ($this->config["template_cache_enable"]) {
            $compile_file = $this->config["template_cache_dir"] . DIRECTORY_SEPARATOR . md5($file) . ".html";
            file_put_contents($compile_file, $content);
        }

        return $content;
    }


    public function get_file_path_and_name($file)
    {

        $url = $this->config["tpl_dir"] . "/" . $file . ".html" . ($this->config["secret"] ? ("." . md5($file . $this->config["secret"]) . ".html") : "");

        return $url;
    }

    public function get_filemtime($file)
    {
        if (!$this->config["template_cache_enable"])
            return time() + 10; // TODO: Change the autogenerated stub
        else {
            $compile_file = $this->config["template_cache_dir"] . DIRECTORY_SEPARATOR . md5($file) . ".html";
            if (!file_exists($compile_file)) {
                return time() + 10;
            } else {
                if (time() - filemtime($compile_file) > $this->config["template_cache_time"]) {
                    return time() + 10;
                } else {
                    return 0;
                }

            }
        }
    }
}